{"ast":null,"code":"let game = {\n  isGameLocked: false,\n  firstCardCheck: null,\n  secondCardCheck: null,\n  flippedCards: 0,\n  icons: [\"bootstrap\", \"css\", \"electron\", \"firebase\", \"html\", \"javascript\", \"jquery\", \"mongo\", \"node\", \"react\"],\n  cards: [],\n  createCards: function () {\n    game.cards = [];\n    game.icons.forEach(element => {\n      game.cards.push(game.duplicate(element));\n    });\n    game.cards = game.cards.flatMap(pair => pair);\n    game.shuffleCards();\n  },\n  duplicate: function (original) {\n    return [{\n      id: game.createID(original),\n      icon: original,\n      flipped: false\n    }, {\n      id: game.createID(original),\n      icon: original,\n      flipped: false\n    }];\n  },\n  createID: function (tech) {\n    return tech + parseInt(Math.random() * 1000);\n  },\n  shuffleCards: function () {\n    let currentIndex = game.cards.length;\n    let randomIndex = 0;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [game.cards[randomIndex], game.cards[currentIndex]] = [game.cards[currentIndex], game.cards[randomIndex]];\n    }\n\n    return game.cards;\n  },\n  cardCheck: function (currentCard) {\n    let isFlipped = currentCard.flipped === true;\n\n    if (isFlipped || this.isGameLocked) {\n      return false;\n    }\n\n    if (!this.firstCardCheck) {\n      currentCard.flipped = true;\n      game.firstCardCheck = currentCard;\n      return true;\n    } else {\n      currentCard.flipped = true;\n      game.secondCardCheck = currentCard;\n      game.isGameLocked = true;\n      return true;\n    }\n  },\n  pairCheck: function () {\n    if (!this.firstCardCheck || !this.secondCardCheck) {\n      return false;\n    }\n\n    return this.firstCardCheck.icon === this.secondCardCheck.icon;\n  },\n  clearCheck: function () {\n    game.firstCardCheck = null;\n    game.secondCardCheck = null;\n    game.isGameLocked = false;\n  },\n  isGameOver: function () {\n    this.cards.forEach(card => {\n      if (card.flipped) {\n        ++this.flippedCards;\n      }\n    });\n\n    if (this.flippedCards == 20) {\n      return true;\n    } else {\n      game.flippedCards = 0;\n      return false;\n    }\n  },\n  flipCards: function (card, setIsGameOverTrue, setCards) {\n    if (this.cardCheck(card)) {\n      if (this.pairCheck()) {\n        this.clearCheck();\n\n        if (this.isGameOver()) {\n          setIsGameOver(true);\n        }\n      } else if (this.isGameLocked) {\n        setTimeout(() => {\n          this.unflipCards();\n          this.clearCheck();\n          setCards([...this.cards]);\n        }, 500);\n      }\n\n      setCards([...this.cards]);\n    }\n  },\n  unflipCards: function () {\n    this.firstCardCheck.flipped = false;\n    this.secondCardCheck.flipped = false;\n  }\n};\nexport default game;","map":{"version":3,"names":["game","isGameLocked","firstCardCheck","secondCardCheck","flippedCards","icons","cards","createCards","forEach","element","push","duplicate","flatMap","pair","shuffleCards","original","id","createID","icon","flipped","tech","parseInt","Math","random","currentIndex","length","randomIndex","floor","cardCheck","currentCard","isFlipped","pairCheck","clearCheck","isGameOver","card","flipCards","setIsGameOverTrue","setCards","setIsGameOver","setTimeout","unflipCards"],"sources":["/home/viniciustorresrocha/Documents/projetos/Curso-Dev-Web/jogo-da-memÃ³ria/jogo/src/game/game.js"],"sourcesContent":["let game = {\n\tisGameLocked: false,\n\tfirstCardCheck: null,\n\tsecondCardCheck: null,\n\tflippedCards: 0,\n\ticons: [\n\t\t\"bootstrap\",\n\t\t\"css\",\n\t\t\"electron\",\n\t\t\"firebase\",\n\t\t\"html\",\n\t\t\"javascript\",\n\t\t\"jquery\",\n\t\t\"mongo\",\n\t\t\"node\",\n\t\t\"react\",\n\t],\n\tcards: [],\n\tcreateCards: function () {\n\t\tgame.cards = []\n\n\t\tgame.icons.forEach(element => {\n\t\t\tgame.cards.push(game.duplicate(element))\n\t\t})\n\n\t\tgame.cards = game.cards.flatMap(pair => pair)\n\t\tgame.shuffleCards()\n\t},\n\tduplicate: function (original) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: game.createID(original),\n\t\t\t\ticon: original,\n\t\t\t\tflipped: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: game.createID(original),\n\t\t\t\ticon: original,\n\t\t\t\tflipped: false,\n\t\t\t},\n\t\t]\n\t},\n\tcreateID: function (tech) {\n\t\treturn tech + parseInt(Math.random() * 1000)\n\t},\n\tshuffleCards: function () {\n\t\tlet currentIndex = game.cards.length\n\t\tlet randomIndex = 0\n\n\t\twhile (currentIndex !== 0) {\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex)\n\t\t\tcurrentIndex--\n\t\t\t;[game.cards[randomIndex], game.cards[currentIndex]] = [\n\t\t\t\tgame.cards[currentIndex],\n\t\t\t\tgame.cards[randomIndex],\n\t\t\t]\n\t\t}\n\t\treturn game.cards\n\t},\n\tcardCheck: function (currentCard) {\n\t\tlet isFlipped = currentCard.flipped === true\n\n\t\tif (isFlipped || this.isGameLocked) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this.firstCardCheck) {\n\t\t\tcurrentCard.flipped = true\n\t\t\tgame.firstCardCheck = currentCard\n\t\t\treturn true\n\t\t} else {\n\t\t\tcurrentCard.flipped = true\n\t\t\tgame.secondCardCheck = currentCard\n\t\t\tgame.isGameLocked = true\n\t\t\treturn true\n\t\t}\n\t},\n\tpairCheck: function () {\n\t\tif (!this.firstCardCheck || !this.secondCardCheck) {\n\t\t\treturn false\n\t\t}\n\t\treturn (\n\t\t\tthis.firstCardCheck.icon ===\n\t\t\tthis.secondCardCheck.icon\n\t\t)\n\t},\n\tclearCheck: function () {\n\t\tgame.firstCardCheck = null\n\t\tgame.secondCardCheck = null\n\t\tgame.isGameLocked = false\n\t},\n\tisGameOver: function () {\n\t\tthis.cards.forEach((card) => {\n\t\t\tif (card.flipped) {\n\t\t\t\t++this.flippedCards\n\t\t\t}\n\t\t})\n\t\tif (this.flippedCards == 20) {\n\t\t\treturn true\n\t\t} else {\n\t\t\tgame.flippedCards = 0\n\t\t\treturn false\n\t\t}\n\t},\n\tflipCards: function (card, setIsGameOverTrue, setCards) {\n\t\tif (this.cardCheck(card)) {\n\t\t\tif (this.pairCheck()) {\n\t\t\t\tthis.clearCheck()\n\t\t\t\tif (this.isGameOver()) {\n\t\t\t\t\tsetIsGameOver(true)\n\t\t\t\t}\n\t\t\t} else if (this.isGameLocked) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.unflipCards()\n\t\t\t\t\tthis.clearCheck()\n\t\t\t\t\tsetCards([...this.cards])\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t\tsetCards([...this.cards])\n\t\t}\t\n\t},\n\tunflipCards: function () {\n\t\tthis.firstCardCheck.flipped = false\n\t\tthis.secondCardCheck.flipped = false\n\t}\n}\n\nexport default game\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}